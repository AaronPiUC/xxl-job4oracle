<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.job.admin.dao.XxlJobInfoDao">
    <resultMap id="XxlJobInfo" type="com.xxl.job.admin.core.model.XxlJobInfo">
        <result column="id" property="id"/>

        <result column="job_group" property="jobGroup"/>
        <result column="job_cron" property="jobCron"/>
        <result column="job_desc" property="jobDesc"/>

        <result column="add_time" property="addTime"/>
        <result column="update_time" property="updateTime"/>

        <result column="author" property="author"/>
        <result column="alarm_email" property="alarmEmail"/>

        <result column="executor_route_strategy" property="executorRouteStrategy"/>
        <result column="executor_handler" property="executorHandler"/>
        <result column="executor_param" property="executorParam"/>
        <result column="executor_block_strategy" property="executorBlockStrategy"/>
        <result column="executor_timeout" property="executorTimeout"/>
        <result column="executor_fail_retry_count" property="executorFailRetryCount"/>

        <result column="glue_type" property="glueType"/>
        <result column="glue_source" property="glueSource"/>
        <result column="glue_remark" property="glueRemark"/>
        <result column="glue_updatetime" property="glueUpdatetime"/>

        <result column="child_jobid" property="childJobId"/>

        <result column="trigger_status" property="triggerStatus"/>
        <result column="trigger_last_time" property="triggerLastTime"/>
        <result column="trigger_next_time" property="triggerNextTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        t.id,
        t.job_group,
        t.job_cron,
        t.job_desc,
        t.add_time,
        t.update_time,
        t.author,
        t.alarm_email,
        t.executor_route_strategy,
        t.executor_handler,
        t.executor_param,
        t.executor_block_strategy,
        t.executor_timeout,
        t.executor_fail_retry_count,
        t.glue_type,
        t.glue_source,
        t.glue_remark,
        t.glue_updatetime,
        t.child_jobid,
        t.trigger_status,
        t.trigger_last_time,
        t.trigger_next_time
    </sql>

    <select id="pageList" parameterType="java.util.HashMap" resultMap="XxlJobInfo">
        select * from (
                select temp.*, ROWNUM as finalnum from (
                select
        <include refid="Base_Column_List"/>
        FROM xxl_job_info t
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="jobGroup gt 0">
                AND t.job_group = #{jobGroup}
            </if>
            <if test="triggerStatus gte 0">
                AND t.trigger_status = #{triggerStatus}
            </if>
            <if test="jobDesc != null and jobDesc != ''">
                AND t.job_desc like CONCAT(CONCAT('%', #{jobDesc}), '%')
            </if>
            <if test="executorHandler != null and executorHandler != ''">
                AND t.executor_handler like CONCAT(CONCAT('%', #{executorHandler}), '%')
            </if>
            <if test="author != null and author != ''">
                AND t.author like CONCAT(CONCAT('%', #{author}), '%')
            </if>
        </trim>
        ORDER BY id DESC) temp
                where ROWNUM <![CDATA[<= ]]> (#{offset} + #{pagesize}) )
                where finalnum <![CDATA[>]]> #{offset}
    </select>

    <select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
        SELECT count(1)
        FROM xxl_job_info t
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="jobGroup gt 0">
                AND t.job_group = #{jobGroup}
            </if>
            <if test="triggerStatus gte 0">
                AND t.trigger_status = #{triggerStatus}
            </if>
            <if test="jobDesc != null and jobDesc != ''">
                AND t.job_desc like CONCAT(CONCAT('%', #{jobDesc}), '%')
            </if>
            <if test="executorHandler != null and executorHandler != ''">
                AND t.executor_handler like CONCAT(CONCAT('%', #{executorHandler}), '%')
            </if>
            <if test="author != null and author != ''">
                AND t.author like CONCAT(CONCAT('%', #{author}), '%')
            </if>
        </trim>
    </select>

    <insert id="save" parameterType="com.xxl.job.admin.core.model.XxlJobInfo" useGeneratedKeys="true"
            keyProperty="info.id" keyColumn="ID">
        INSERT INTO xxl_job_info (job_group,
                                  job_cron,
                                  job_desc,
                                  add_time,
                                  update_time,
                                  author,
                                  alarm_email,
                                  executor_route_strategy,
                                  executor_handler,
                                  executor_param,
                                  executor_block_strategy,
                                  executor_timeout,
                                  executor_fail_retry_count,
                                  glue_type,
                                  glue_source,
                                  glue_remark,
                                  glue_updatetime,
                                  child_jobid,
                                  trigger_status,
                                  trigger_last_time,
                                  trigger_next_time)
        VALUES (#{info.jobGroup},
                #{info.jobCron},
                #{info.jobDesc},
                #{info.addTime},
                #{info.updateTime},
                #{info.author},
                #{info.alarmEmail},
                #{info.executorRouteStrategy},
                #{info.executorHandler},
                #{info.executorParam},
                #{info.executorBlockStrategy},
                #{info.executorTimeout},
                #{info.executorFailRetryCount},
                #{info.glueType},
                #{info.glueSource},
                #{info.glueRemark},
                #{info.glueUpdatetime},
                #{info.childJobId},
                #{info.triggerStatus},
                #{info.triggerLastTime},
                #{info.triggerNextTime})
        <!--<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
            /*SELECT @@IDENTITY AS id*/
        </selectKey>-->
    </insert>

    <select id="loadById" parameterType="java.util.HashMap" resultMap="XxlJobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM xxl_job_info t
        WHERE t.id = #{id}
    </select>

    <update id="update" parameterType="com.xxl.job.admin.core.model.XxlJobInfo">
        UPDATE xxl_job_info
        SET job_group                 = #{xxlJobInfo.jobGroup},
            job_cron                  = #{xxlJobInfo.jobCron},
            job_desc                  = #{xxlJobInfo.jobDesc,jdbcType=VARCHAR},
            update_time               = #{xxlJobInfo.updateTime,jdbcType=TIMESTAMP},
            author                    = #{xxlJobInfo.author,jdbcType=VARCHAR},
            alarm_email               = #{xxlJobInfo.alarmEmail,jdbcType=VARCHAR},
            executor_route_strategy   = #{xxlJobInfo.executorRouteStrategy,jdbcType=VARCHAR},
            executor_handler          = #{xxlJobInfo.executorHandler,jdbcType=VARCHAR},
            executor_param            = #{xxlJobInfo.executorParam,jdbcType=VARCHAR},
            executor_block_strategy   = #{xxlJobInfo.executorBlockStrategy,jdbcType=VARCHAR},
            executor_timeout          = #{xxlJobInfo.executorTimeout},
            executor_fail_retry_count =#{xxlJobInfo.executorFailRetryCount},
            glue_type                 = #{xxlJobInfo.glueType},
            glue_source               = #{xxlJobInfo.glueSource,jdbcType=CLOB},
            glue_remark               = #{xxlJobInfo.glueRemark,jdbcType=VARCHAR},
            glue_updatetime           = #{xxlJobInfo.glueUpdatetime,jdbcType=TIMESTAMP},
            child_jobid               = #{xxlJobInfo.childJobId,jdbcType=VARCHAR},
            trigger_status            = #{xxlJobInfo.triggerStatus},
            trigger_last_time         = #{xxlJobInfo.triggerLastTime},
            trigger_next_time         = #{xxlJobInfo.triggerNextTime}
        WHERE id = #{xxlJobInfo.id}
    </update>

    <delete id="delete" parameterType="java.util.HashMap">
        DELETE
        FROM xxl_job_info
        WHERE id = #{id}
    </delete>

    <select id="getJobsByGroup" parameterType="java.util.HashMap" resultMap="XxlJobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM xxl_job_info t
        WHERE t.job_group = #{jobGroup}
    </select>

    <select id="findAllCount" resultType="int">
        SELECT count(1)
        FROM xxl_job_info
    </select>


    <select id="scheduleJobQuery" parameterType="java.util.HashMap" resultMap="XxlJobInfo">
        select * from (SELECT
        <include refid="Base_Column_List"/>
        ,ROWNUM as tempnum
        FROM xxl_job_info t
        WHERE t.trigger_status = 1
          and t.trigger_next_time <![CDATA[ <= ]]> #{maxNextTime}
        ORDER BY id) temp
        where tempnum <![CDATA[ <= ]]> #{pagesize}
    </select>

    <update id="scheduleUpdate" parameterType="com.xxl.job.admin.core.model.XxlJobInfo">
        UPDATE xxl_job_info
        SET trigger_last_time = #{xxlJobInfo.triggerLastTime},
            trigger_next_time = #{xxlJobInfo.triggerNextTime},
            trigger_status    = #{xxlJobInfo.triggerStatus}
        WHERE id = #{xxlJobInfo.id}
    </update>
</mapper>